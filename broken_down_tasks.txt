```json
{
  "Which high court disposed the most cases from 2019 - 2022?": "1. Filter data where `year` is greater than or equal to 2019 and `year` is less than or equal to 2022.\n2. Group data by the `court` column and aggregate by counting rows to create a `case_count` for each court.\n3. Sort the aggregated data by `case_count` in descending order.\n4. Return the `court` value from the first row.",
  "What's the regression slope of the date_of_registration - decision_date by year in the court=33_10?": "1. Filter data where the `court` column equals '33_10'.\n2. Create a `delay_days` column by calculating the difference in days between `decision_date` and `date_of_registration`, after converting `date_of_registration` from 'DD-MM-YYYY' string format to a date type.\n3. Calculate the linear regression slope with `delay_days` as the dependent variable (Y) and `year` as the independent variable (X).\n4. Return the calculated slope value.",
  "Plot the year and # of days of delay from the above question as a scatterplot with a regression line. Encode as a base64 data URI under 100,000 characters": "1. Filter data where the `court` column equals '33_10'.\n2. Create a `delay_days` column by calculating the difference in days between `decision_date` and `date_of_registration`, after converting `date_of_registration` from 'DD-MM-YYYY' string format to a date type.\n3. Generate a scatter plot using the `year` column as the X-axis and `delay_days` as the Y-axis.\n4. Overlay a linear regression line on the plot and encode the final image as a base64 data URI string with a `data:image/webp;base64,` prefix."
}
```